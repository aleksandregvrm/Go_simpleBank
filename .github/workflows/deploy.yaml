name: Deploy

on:
  workflow_run:
    workflows: ["Running tests"]
    types:
      - completed
    status: success
  push:
    branches: [main]

jobs:
  build:
    permissions:
      id-token: write
      contents: read

    name: Build and deploy image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon Public ECR
        id: login-ecr
        run: aws ecr-public get-login-password --region eu-central-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Create .env file
        run: |
          echo "DB_DRIVER=${{ secrets.DB_DRIVER }}" >> .env
          echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" >> .env
          echo "SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_SERVICE_URL=${{ secrets.POSTGRES_SERVICE_URL }}" >> .env
          echo "TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMMETRIC_KEY }}" >> .env
          echo "ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }}" >> .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: public.ecr.aws/w1j4z1q9
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the image using docker compose
          docker compose build app

          # Tag the image for Amazon ECR
          docker tag simplebank:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG

          # Push the image to Amazon ECR
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
